{"version":3,"file":"static/js/201.6e6d8f64.chunk.js","mappings":"8KAIaA,EAAa,CAClBC,WADkB,SACPC,GAAgB,OAAD,2IAENC,IAAAA,KACpB,qEACA,CAAED,MAAAA,GACF,CACEE,QAAS,CACP,eAAgB,mBAChBC,OAAQ,mBACRC,cAAe,oDATO,cAEtBC,EAFsB,OActBC,EAASD,EAAQE,KAAKC,YAAYC,KAAI,SAACC,GAAD,MAAgB,CAACC,IAAKD,EAAKH,KAAKI,IAAKC,KAAMF,EAAKG,MAAhD,IAC5CC,QAAQC,IAAI,iEAAwDT,GAfxC,kBAgBrBA,GAhBqB,0FAkB/B,E,yMCjBKU,EAAWC,EAAAA,EAAAA,OAEnB,EAAeC,EAAAA,GAAAA,QAAiB,YAAwC,EAArCC,QAAsC,IACvE,GAA8BC,EAAAA,EAAAA,UAAgB,IAA9C,eAAOf,EAAP,KAAgBgB,EAAhB,KAEMC,GAAQC,EAAAA,EAAAA,MACd,EAAeC,EAAAA,EAAAA,UAARC,GAAP,eAEMC,EAAQ,yCAAG,WAAOb,GAAP,4FACUf,EAAAA,EAAAA,WAAsBe,GADhC,OACTc,EADS,OAEfN,EAAWM,GAFI,2CAAH,sDAKRC,GAAeC,EAAAA,EAAAA,cAAY,WAC/BJ,EAAKK,iBAAiBC,MAAK,WACzB,IAAMC,GAAU,UAAQP,EAAKQ,kBAC7BX,EAAMY,QAAQF,GACdV,EAAMa,MACP,GACF,GAAE,CACDb,EAEAG,IAGF,OACE,SAAC,KAAD,mBACMW,EAAAA,EAAAA,IAAUd,IADhB,IAEEe,MAAM,8FACNC,OAAO,yDACPC,WAAW,uCACXC,KAAMZ,EALR,UAOE,SAAC,IAAD,CAAMH,KAAMA,EAAMgB,OAAO,WAAzB,UACE,SAAC,SAAD,CACE7B,KAAK,MACL8B,MAAM,0IACNC,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,0CANf,UAUE,SAAC,IAAD,CACEC,YAAU,EACVC,cAAc,EACdrB,SAAUA,EAHZ,SAMGrB,EAAQI,KAAI,SAACuC,GAAD,OACX,UAAChC,EAAD,CAAQH,MAAOmC,EAAOrC,IAAtB,WACE,4BAAOqC,EAAOpC,KAAd,QACA,iBAAMqC,MAAO,CAAEC,MAAO,OAAQC,SAAU,QAAxC,SACGH,EAAOrC,QAJD,YAaxB,I,oBCwDD,EAvFsB,WA4BpB,IAAMyC,GAAUC,EAAAA,EAAAA,MAEhB,GAAgDC,EAAAA,EAAAA,IAC9C,SAACC,GAAD,OAAWA,CAAX,IADMC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,WAAYC,EAA/B,EAA+BA,aAQzBC,GAAYpC,EAAAA,EAAAA,IAASqC,GAIrBC,GAAgBhC,EAAAA,EAAAA,cAAY,WAChC8B,EAAUG,OAAO/B,MAAK,SAACgC,GAGrBN,EAAWM,EACZ,GACF,GAAE,CAACJ,EAAWH,IAQf,OANAQ,EAAAA,EAAAA,YAAU,WACRN,GACD,GAAE,KAKD,4BACE,8EACA,SAAC,IAAD,CAAQO,KAAK,UAAUC,QAASL,EAAhC,gGAGA,gBAAKM,UAAU,QAAf,SACGX,EAAU/C,KAAI,SAACU,GAAD,OACb,SAAC,IAAD,CACAiD,WAAS,EAEP/B,MAAO,sBAASlB,EAAQP,KACxBsD,QAAS,kBAlCGG,EAkCgBlD,EAAQkD,QAjC5CjB,EAAQ,cAAgBiB,GADL,IAACA,CAkCH,EAJX,SAMGlD,EAAQR,KAJJQ,EAAQkD,GAHF,QAsBtB,C","sources":["features/dadata.ts","entities/company/form.tsx","pages/companies/index.tsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { utimes } from \"fs\";\r\nimport { api } from \"shared/config/api\";\r\n\r\nexport const DADATA_API = {\r\n  async getCompany(query: string) {\r\n    try {\r\n      const options = await axios.post(\r\n        \"https://suggestions.dadata.ru/suggestions/api/4_1/rs/suggest/party\",\r\n        { query },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n            Authorization: \"Token f72f5381ea6760b06b1034d298d2c9bce5824346\",\r\n          },\r\n        }\r\n      );\r\n    //   const result = options.data.suggestions\r\n      const result = options.data.suggestions.map((item: any) => ({inn: item.data.inn, name: item.value}))\r\n      console.log(\"üöÄ ~ file: dadata.ts ~ line 19 ~ getCompany ~ result\", result)\r\n      return result;\r\n    } catch (error) {}\r\n  },\r\n};\r\n","import NiceModal, { useModal, antdModal } from \"@ebay/nice-modal-react\";\r\nimport { Form, Input, Modal, Select, Spin } from \"antd\";\r\nimport { DADATA_API } from \"features/dadata\";\r\nimport { useCallback, useState } from \"react\";\r\nimport { ICompany } from \"./types\";\r\n\r\nconst { Option } = Select;\r\n\r\nexport default NiceModal.create(({ company }: { company: ICompany }) => {\r\n  const [options, setOptions] = useState<any[]>([]);\r\n\r\n  const modal = useModal();\r\n  const [form] = Form.useForm();\r\n\r\n  const onSearch = async (value: string) => {\r\n    const newOptions = await DADATA_API.getCompany(value);\r\n    setOptions(newOptions);\r\n  };\r\n\r\n  const handleSubmit = useCallback(() => {\r\n    form.validateFields().then(() => {\r\n      const newCompany = { ...form.getFieldsValue() };\r\n      modal.resolve(newCompany);\r\n      modal.hide();\r\n    });\r\n  }, [\r\n    modal,\r\n    // user,\r\n    form,\r\n  ]);\r\n\r\n  return (\r\n    <Modal\r\n      {...antdModal(modal)}\r\n      title=\"–°–æ–∑–¥–∞—Ç—å –∫–æ–º–ø–∞–Ω–∏—é\"\r\n      okText=\"–°–æ—Ö—Ä–∞–Ω–∏—Ç—å\"\r\n      cancelText=\"–û—Ç–º–µ–Ω–∞\"\r\n      onOk={handleSubmit}\r\n    >\r\n      <Form form={form} layout=\"vertical\">\r\n        <Form.Item\r\n          name=\"inn\"\r\n          label=\"–ù–∞–∑–≤–∞–Ω–∏–µ –∏–ª–∏ –ò–ù–ù –∫–æ–º–ø–∞–Ω–∏–∏\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input the title of collection!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Select\r\n            showSearch\r\n            filterOption={false}\r\n            onSearch={onSearch}\r\n            // notFoundContent={fetching ? <Spin size=\"small\" /> : null}\r\n          >\r\n            {options.map((option) => (\r\n              <Option value={option.inn}>\r\n                <span>{option.name} </span>\r\n                <span style={{ color: \"gray\", fontSize: \"10px\" }}>\r\n                  {option.inn}\r\n                </span>\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n});\r\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { EditOutlined } from \"@ant-design/icons\";\r\nimport { Button, Card, Table } from \"antd\";\r\nimport { ColumnsType } from \"antd/lib/table\";\r\nimport { useModal } from \"@ebay/nice-modal-react\";\r\n\r\nimport { ICompany } from \"entities/company/types\";\r\nimport { CompanyCard } from \"entities/company/ui\";\r\nimport CompanyForm from \"entities/company/form\";\r\nimport { useItems } from \"features/useItems\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useStore } from \"entities/store\";\r\n\r\ninterface DataType {\r\n  key: string;\r\n  name: string;\r\n  inn: number;\r\n  tags: string[];\r\n}\r\n\r\n// const columns: ColumnsType<DataType> = [\r\n//   {\r\n//     title: \"–ù–∞–∑–≤–∞–Ω–∏–µ\",\r\n//     dataIndex: \"name\",\r\n//     key: \"name\",\r\n//   },\r\n//   {\r\n//     title: \"–ò–ù–ù\",\r\n//     dataIndex: \"inn\",\r\n//     key: \"inn\",\r\n//   },\r\n//   // {\r\n//   //   title: 'Address',\r\n//   //   dataIndex: 'address',\r\n//   //   key: 'address',\r\n//   // }\r\n// ];\r\n\r\nconst CompaniesPage = () => {\r\n  // const userModal = useModal(CompanyForm);\r\n  // const [companies, setCompanies] = useState<ICompany[]>([]);\r\n\r\n  // const handleNewUser = useCallback(() => {\r\n  //   userModal.show().then((newCompany: any) => {\r\n  //     setCompanies([newCompany, ...companies]);\r\n  //   });\r\n  // }, [userModal, companies]);\r\n\r\n  // const handleEditUser = useCallback(\r\n  //   (company: ICompany) => {\r\n  //     userModal.show({company}).then((newCompany: any) => {\r\n  //       setCompanies((companies) => {\r\n  //         // Modify users immutablly\r\n  //         const i = companies.findIndex((u) => u.id === newCompany.id);\r\n  //         const updated = { ...companies[i], ...newCompany };\r\n  //         const arr = [...companies];\r\n  //         arr.splice(i, 1, updated);\r\n  //         return arr;\r\n  //       });\r\n  //     });\r\n  //   },\r\n  //   [userModal]\r\n  // );\r\n\r\n\r\n\r\n  const history = useNavigate();\r\n\r\n  const { companies, addCompany, getCompanies } = useStore(\r\n    (state) => state\r\n  );\r\n\r\n  const clickHandler = (id: string) => {\r\n    history(\"/companies/\" + id);\r\n  };\r\n\r\n  const userModal = useModal(CompanyForm);\r\n  // const addQuestion = useStore(state => state.addQuestion)\r\n  // const [items, setItems] = useState<any[]>([]);\r\n\r\n  const handleNewItem = useCallback(() => {\r\n    userModal.show().then((newItem: any) => {\r\n      // setItems([newItem, ...items]);\r\n      // newItem.id = String(Date.now());\r\n      addCompany(newItem);\r\n    });\r\n  }, [userModal, companies]);\r\n\r\n  useEffect(() => {\r\n    getCompanies()\r\n  }, []);\r\n\r\n  // const { items, handleNewItem } = useItems<ICompany>(CompanyForm);\r\n\r\n  return (\r\n    <div>\r\n      <h1>–ö–æ–º–ø–∞–Ω–∏–∏</h1>\r\n      <Button type=\"primary\" onClick={handleNewItem}>\r\n        + –ù–æ–≤–∞—è –∫–æ–º–ø–∞–Ω–∏—è\r\n      </Button>\r\n      <div className=\"cards\">\r\n        {companies.map((company) => (\r\n          <Card\r\n          hoverable\r\n            key={company.id}\r\n            title={'–û–û–û ' + company.name}\r\n            onClick={() => clickHandler(company.id)}\r\n          >\r\n            {company.inn}\r\n          </Card>\r\n        ))}\r\n      </div>\r\n\r\n      {/* <Table\r\n        size=\"small\"\r\n        rowKey=\"id\"\r\n        pagination={false}\r\n        columns={columns}\r\n        dataSource={companies}\r\n        style={{ marginTop: \"20px\" }}\r\n      /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CompaniesPage;\r\n"],"names":["DADATA_API","getCompany","query","axios","headers","Accept","Authorization","options","result","data","suggestions","map","item","inn","name","value","console","log","Option","Select","NiceModal","company","useState","setOptions","modal","useModal","Form","form","onSearch","newOptions","handleSubmit","useCallback","validateFields","then","newCompany","getFieldsValue","resolve","hide","antdModal","title","okText","cancelText","onOk","layout","label","rules","required","message","showSearch","filterOption","option","style","color","fontSize","history","useNavigate","useStore","state","companies","addCompany","getCompanies","userModal","CompanyForm","handleNewItem","show","newItem","useEffect","type","onClick","className","hoverable","id"],"sourceRoot":""}